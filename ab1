
Let
a+b = 1
x = 1/a
y = 1/b
c = x-1
d = y-1
S(t) = t + t^2 + t^3 + ...

Then
cd=1
x+y=xy
b/a = x-1 = x/y = c = S(b)
a/b = y-1 = y/x = d = S(a)
d/c = d^2 = (y/x)^2 = (a/b)^2
c/d = c^2 = (x/y)^2 = (b/a)^2
bx = b/a = c
ay = a/b = d
a=d/y
b=c/x

S(a).S(b) = 1
1/b = 1+S(a) = y
1/a = 1+S(b) = x
S(a)+S(b) = xy - 2

  r+r^2+r^3.. = r/(1-r)
1+r+r^2+r^3.. = 1/(1-r)
1/a+1/a^2+1/a^3+.. = 1/(a-1) -> s

m = a^4+a^3+a^2+a+1 = (a^5-1)/(a-1)
m+s = (a^5)/(a-1)  -> r = 1/a

1/(1-1/2^z)= 2^z/(2^z-1)
------------------------------
u = 1/2 + a
v = 1/2 - a

--------------

A major problem I cam across in terms of devloper experience and dev speed is that, currently it apepars that there is no way for developers to quickly test their code changes without going through code merge (into master branch) and merge approvals.

This is in stark contrast with app developement, where one would have a run-time environment (JVM etc) on their local VDI, and they can quickly test locally as they evolve the code to fix a bug etc. This is the core aspect which gives devlopment speed.

For cloud dev, the runtime environment doesn't exist locally on VDI. They will need to deploy the changes to a cloud env. But currently this requires devs to go through approvals just to test their chanhes quickly to check if the fix works or not. This is impacting the speed due to dependency on others to approve their changes for every small change which was not even tested. This would also result blind coding and pushing to master branch having un-tested code, which is incorrect practice.




